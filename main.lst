


ARM Macro Assembler    Page 1 


    1 00000000         ;****************** main.s ***************
    2 00000000         ; Program written by: *Sebastian Guillen Vargas, Michael
                        Niemer*
    3 00000000         ; Date Created: 2/4/2017
    4 00000000         ; Last Modified: 2/4/2017
    5 00000000         ; Brief description of the program
    6 00000000         ;   The LED toggles at 8 Hz and a varying duty-cycle
    7 00000000         ; Hardware connections (External: One button and one LED
                       )
    8 00000000         ;  PE1 is Button input  (1 means pressed, 0 means not pr
                       essed)
    9 00000000         ;  PE0 is LED output (1 activates external9 LED on proto
                       board)
   10 00000000         ;  PF4 is builtin button SW1 on Launchpad (Internal) 
   11 00000000         ;        Negative Logic (0 means pressed, 1 means not pr
                       essed)
   12 00000000         ; Overall functionality of this system is to operate lik
                       e this
   13 00000000         ;   1) Make PE0 an output and make PE1 and PF4 inputs.
   14 00000000         ;   2) The system starts with the the LED toggling at 8H
                       z,
   15 00000000         ;      which is 8 times per second with a duty-cycle of 
                       20%.
   16 00000000         ;      Therefore, the LED is ON for (0.2*1/8)th of a sec
                       ond
   17 00000000         ;      and OFF for (0.8*1/8)th of a second.
   18 00000000         ;   3) When the button on (PE1) is pressed-and-released 
                       increase
   19 00000000         ;      the duty cycle by 20% (modulo 100%). Therefore fo
                       r each
   20 00000000         ;      press-and-release the duty cycle changes from 20%
                        to 40% to 60%
   21 00000000         ;      to 80% to 100%(ON) to 0%(Off) to 20% to 40% so on
                       
   22 00000000         ;   4) Implement a "breathing LED" when SW1 (PF4) on the
                        Launchpad is pressed:
   23 00000000         ;      a) Be creative and play around with what "breathi
                       ng" means.
   24 00000000         ;         An example of "breathing" is most computers po
                       wer LED in sleep mode
   25 00000000         ;         (e.g., https://www.youtube.com/watch?v=ZT6siXy
                       IjvQ).
   26 00000000         ;      b) When (PF4) is released while in breathing mode
                       , resume blinking at 8Hz.
   27 00000000         ;         The duty cycle can either match the most recen
                       t duty-
   28 00000000         ;         cycle or reset to 20%.
   29 00000000         ;      TIP: debugging the breathing LED algorithm and fe
                       el on the simulator is impossible.
   30 00000000         ; PortE device registers
   31 00000000 400243FC 
                       GPIO_PORTE_DATA_R
                               EQU              0x400243FC
   32 00000000 40024400 
                       GPIO_PORTE_DIR_R
                               EQU              0x40024400
   33 00000000 40024420 
                       GPIO_PORTE_AFSEL_R
                               EQU              0x40024420



ARM Macro Assembler    Page 2 


   34 00000000 4002451C 
                       GPIO_PORTE_DEN_R
                               EQU              0x4002451C
   35 00000000         ; PortF device registers
   36 00000000 400253FC 
                       GPIO_PORTF_DATA_R
                               EQU              0x400253FC
   37 00000000 40025400 
                       GPIO_PORTF_DIR_R
                               EQU              0x40025400
   38 00000000 40025420 
                       GPIO_PORTF_AFSEL_R
                               EQU              0x40025420
   39 00000000 40025510 
                       GPIO_PORTF_PUR_R
                               EQU              0x40025510
   40 00000000 4002551C 
                       GPIO_PORTF_DEN_R
                               EQU              0x4002551C
   41 00000000         ;Constants for 8Hz frequency. Format:Percentage On Off 
   42 00000000 001E8480 
                       TwentyOn
                               EQU              0x001E8480
   43 00000000 0007A120 
                       TwentyOff
                               EQU              0x0007A120
   44 00000000 0016E360 
                       FortyOn EQU              0x0016E360
   45 00000000 000F4240 
                       FortyOff
                               EQU              0x000F4240
   46 00000000 000F4240 
                       SixtyOn EQU              0x000F4240
   47 00000000 0016E360 
                       SixtyOff
                               EQU              0x0016E360
   48 00000000 0007A120 
                       EightyOn
                               EQU              0x0007A120
   49 00000000 001E8480 
                       EightyOff
                               EQU              0x001E8480
   50 00000000         ;Constants for Breathingfrequency. Same format
   51 00000000 0000C350 
                       Brth    EQU              0x0000C350
   52 00000000 00000032 
                       Uno     EQU              0x00000032
   53 00000000 000003E7 
                       PercentCnt
                               EQU              0x000003E7
   54 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   55 00000000         
   56 00000000                 IMPORT           TExaS_Init
   57 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   58 00000000                 THUMB
   59 00000000                 EXPORT           Start



ARM Macro Assembler    Page 3 


   60 00000000         Start
   61 00000000         ; TExaS_Init sets bus clock at 80 MHz
   62 00000000 F7FF FFFE       BL               TExaS_Init  ; voltmeter, scope 
                                                            on PD3
   63 00000004 B662            CPSIE            I           ; TExaS voltmeter, 
                                                            scope runs on inter
                                                            rupts
   64 00000006         
   65 00000006         ;Initializing Port F;
   66 00000006 4985            LDR              R1, =SYSCTL_RCGCGPIO_R ; 1) act
                                                            ivate clock for Por
                                                            t F
   67 00000008 6808            LDR              R0, [R1]
   68 0000000A F040 0020       ORR              R0, R0, #0x20 ; set bit 5 to tu
                                                            rn on clock
   69 0000000E 6008            STR              R0, [R1]
   70 00000010 BF00            NOP
   71 00000012 BF00            NOP                          ; allow time for cl
                                                            ock to finish      
                                                            
   72 00000014 4982            LDR              R1, =GPIO_PORTF_DIR_R ; 5) set 
                                                            direction register
   73 00000016 F04F 0000       MOV              R0,#0x00    ; PF4 is input
   74 0000001A 6008            STR              R0, [R1]
   75 0000001C 4981            LDR              R1, =GPIO_PORTF_AFSEL_R ; 6) re
                                                            gular port function
                                                            
   76 0000001E F04F 0000       MOV              R0, #0      ; 0 means disable a
                                                            lternate function 
   77 00000022 6008            STR              R0, [R1]
   78 00000024 4980            LDR              R1, =GPIO_PORTF_PUR_R ; pull-up
                                                             resistors for PF4,
                                                            PF0
   79 00000026 F04F 0010       MOV              R0, #0x10   ; enable weak pull-
                                                            up on PF0 and PF4
   80 0000002A 6008            STR              R0, [R1]
   81 0000002C 497F            LDR              R1, =GPIO_PORTF_DEN_R ; 7) enab
                                                            le Port F digital p
                                                            ort
   82 0000002E F04F 00FF       MOV              R0, #0xFF   ; 1 means enable di
                                                            gital I/O
   83 00000032 6008            STR              R0, [R1]
   84 00000034         
   85 00000034         ;Initializing Port E               
   86 00000034 4979            LDR              R1, =SYSCTL_RCGCGPIO_R ; 1) act
                                                            ivate clock for Por
                                                            t E
   87 00000036 6808            LDR              R0, [R1]
   88 00000038 F040 0010       ORR              R0, R0, #0x10 ; set bit 5 to tu
                                                            rn on clock
   89 0000003C 6008            STR              R0, [R1]
   90 0000003E BF00            NOP
   91 00000040 BF00            NOP
   92 00000042 497B            LDR              R1, =GPIO_PORTE_DIR_R ; 5) set 
                                                            direction register
   93 00000044 F04F 0001       MOV              R0,#0x01    ; PE0 is output
   94 00000048 6008            STR              R0, [R1]
   95 0000004A 497A            LDR              R1, =GPIO_PORTE_AFSEL_R ; 6) re
                                                            gular port function



ARM Macro Assembler    Page 4 


                                                            
   96 0000004C F04F 0000       MOV              R0, #0      ; 0 means disable a
                                                            lternate function 
   97 00000050 6008            STR              R0, [R1]
   98 00000052 4979            LDR              R1, =GPIO_PORTE_DEN_R ; 7) enab
                                                            le Port E digital p
                                                            ort
   99 00000054 F04F 00FF       MOV              R0, #0xFF   ; 1 means enable di
                                                            gital I/O
  100 00000058 6008            STR              R0, [R1]
  101 0000005A         
  102 0000005A         loop
  103 0000005A         
  104 0000005A         Default20
  105 0000005A 4978            LDR              R1, =GPIO_PORTF_DATA_R
  106 0000005C 6808            LDR              R0, [R1]
  107 0000005E 2800            CMP              R0, #0      ;Checking to see if
                                                             PF4 is pressed
  108 00000060 D102            BNE              Begin20     ;If not, continue d
                                                            uty cycles
  109 00000062 F000 F89F       BL               Breathe     ;If so, LED breathe
                                                            s
  110 00000066 E075            B                BeginLEDoff ;When Breathing end
                                                            s, LED goes Off
  111 00000068         
  112 00000068         Begin20
  113 00000068 EA22 0202       BIC              R2, R2      ;R2 needs to be cle
                                                            ared since it is an
                                                             indicator of when 
                                                            the button was pres
                                                            sed
  114 0000006C 4974            LDR              R1, =GPIO_PORTE_DATA_R
  115 0000006E 6808            LDR              R0, [R1]    ;Loading input from
                                                             Port E 
  116 00000070 F000 0002       AND              R0, R0, #0x02 ;Bitmasking
  117 00000074 2802            CMP              R0, #2      ; Checking to see i
                                                            f PE1 is pressed 
  118 00000076 D101            BNE              skip20
  119 00000078 F000 F88C       BL               Poll        ; Poll to see if bu
                                                            tton is released, R
                                                            2 returns 0x02 if p
                                                            ushed AND released
  120 0000007C         
  121 0000007C         skip20
  122 0000007C 4871            LDR              R0, =TwentyOn ;R0 will serve as
                                                             the constant for t
                                                            he On time period
  123 0000007E 4B72            LDR              R3, =TwentyOff ;R3 will serve a
                                                            s the constant for 
                                                            the Off time period
                                                            
  124 00000080 2A02            CMP              R2, #2
  125 00000082 D002            BEQ              next40      ; If it is pressed,
                                                             then it does to 40
                                                            %
  126 00000084 F000 F878       BL               dutyloop    ; If not than the 2
                                                            0% duty cycle is ca
                                                            lled
  127 00000088 E7E7            B                Default20   ; If PE1 hasn't bee



ARM Macro Assembler    Page 5 


                                                            n pressed at all, t
                                                            hen 20% continues
  128 0000008A         
  129 0000008A         next40
  130 0000008A 496C            LDR              R1, =GPIO_PORTF_DATA_R
  131 0000008C 6808            LDR              R0, [R1]
  132 0000008E 2800            CMP              R0, #0      ;Checking to see if
                                                             PF4 is pressed
  133 00000090 D102            BNE              Begin40     ;If not, continue d
                                                            uty cycles
  134 00000092 F000 F887       BL               Breathe     ;If so, LED breathe
                                                            s
  135 00000096 E05D            B                BeginLEDoff ;When Breathing end
                                                            s, LED goes Off
  136 00000098         Begin40
  137 00000098 F002 0200       AND              R2, R2, #0
  138 0000009C 4968            LDR              R1, =GPIO_PORTE_DATA_R
  139 0000009E 6808            LDR              R0, [R1]    ;Loading input from
                                                             Port E 
  140 000000A0 F000 0002       AND              R0, R0, #0x02 ;Bitmasking
  141 000000A4 2802            CMP              R0, #2      ; Checking to see i
                                                            f PE1 is pressed 
  142 000000A6 D101            BNE              skip40
  143 000000A8 F000 F874       BL               Poll        ; Poll to see if bu
                                                            tton is released, R
                                                            2 returns 0x02 if p
                                                            ushed AND released
  144 000000AC         skip40
  145 000000AC 4867            LDR              R0, =FortyOn
  146 000000AE 4B68            LDR              R3, =FortyOff
  147 000000B0 2A02            CMP              R2, #2
  148 000000B2 D002            BEQ              next60      ; If pressed, 60% i
                                                            s called
  149 000000B4 F000 F860       BL               dutyloop    ; 40% is called
  150 000000B8 E7E7            B                next40      ; If PE1 hasn't bee
                                                            n pressed at all, t
                                                            hen 40% continues
  151 000000BA         
  152 000000BA         next60
  153 000000BA 4960            LDR              R1, =GPIO_PORTF_DATA_R
  154 000000BC 6808            LDR              R0, [R1]
  155 000000BE 2800            CMP              R0, #0      ;Checking to see if
                                                             PF4 is pressed
  156 000000C0 D102            BNE              Begin60     ;If not, continue d
                                                            uty cycles
  157 000000C2 F000 F86F       BL               Breathe     ;If so, LED breathe
                                                            s
  158 000000C6 E045            B                BeginLEDoff ;When Breathing end
                                                            s, LED goes Off
  159 000000C8         Begin60
  160 000000C8 F002 0200       AND              R2, R2, #0
  161 000000CC 495C            LDR              R1, =GPIO_PORTE_DATA_R
  162 000000CE 6808            LDR              R0, [R1]    ;Loading input from
                                                             Port E 
  163 000000D0 F000 0002       AND              R0, R0, #0x02 ;Bitmasking
  164 000000D4 2802            CMP              R0, #2      ; Checking to see i
                                                            f PE1 is pressed 
  165 000000D6 D101            BNE              skip60
  166 000000D8 F000 F85C       BL               Poll        ; Poll to see if bu



ARM Macro Assembler    Page 6 


                                                            tton is released, R
                                                            2 returns 0x02 if p
                                                            ushed AND released
  167 000000DC         skip60
  168 000000DC 485C            LDR              R0, =SixtyOn
  169 000000DE 4B5B            LDR              R3, =SixtyOff
  170 000000E0 2A02            CMP              R2, #2
  171 000000E2 D002            BEQ              next80      ; If pressed, 80% i
                                                            s called
  172 000000E4 F000 F848       BL               dutyloop    ; 60% is called
  173 000000E8 E7E7            B                next60      ; 60% continues
  174 000000EA         
  175 000000EA         next80
  176 000000EA 4954            LDR              R1, =GPIO_PORTF_DATA_R
  177 000000EC 6808            LDR              R0, [R1]
  178 000000EE 2800            CMP              R0, #0      ;Checking to see if
                                                             PF4 is pressed
  179 000000F0 D102            BNE              Begin80     ;If not, continue d
                                                            uty cycles
  180 000000F2 F000 F857       BL               Breathe     ;If so, LED breathe
                                                            s
  181 000000F6 E02D            B                BeginLEDoff ;When Breathing end
                                                            s, LED goes Off
  182 000000F8         Begin80
  183 000000F8 F002 0200       AND              R2, R2, #0
  184 000000FC 4950            LDR              R1, =GPIO_PORTE_DATA_R
  185 000000FE 6808            LDR              R0, [R1]    ;Loading input from
                                                             Port E 
  186 00000100 F000 0002       AND              R0, R0, #0x02 ;Bitmasking
  187 00000104 2802            CMP              R0, #2      ; Checking to see i
                                                            f PE1 is pressed 
  188 00000106 D101            BNE              skip80
  189 00000108 F000 F844       BL               Poll        ; Poll to see if bu
                                                            tton is released, R
                                                            2 returns 0x02 if p
                                                            ushed AND released
  190 0000010C         skip80
  191 0000010C 484E            LDR              R0, =EightyOn
  192 0000010E 4B4D            LDR              R3, =EightyOff
  193 00000110 2A02            CMP              R2, #2
  194 00000112 D002            BEQ              next100     ; If pressed, 100% 
                                                            is called
  195 00000114 F000 F830       BL               dutyloop    ; 80% is called
  196 00000118 E7E7            B                next80      ; 80% continues
  197 0000011A         
  198 0000011A         next100
  199 0000011A 4948            LDR              R1, =GPIO_PORTF_DATA_R
  200 0000011C 6808            LDR              R0, [R1]
  201 0000011E 2800            CMP              R0, #0      ;Checking to see if
                                                             PF4 is pressed
  202 00000120 D102            BNE              Begin100    ;If not, continue d
                                                            uty cycles
  203 00000122 F000 F83F       BL               Breathe     ;If so, LED breathe
                                                            s
  204 00000126 E015            B                BeginLEDoff ;When Breathing end
                                                            s, LED goes Off
  205 00000128         Begin100
  206 00000128 F002 0200       AND              R2, R2, #0
  207 0000012C 4944            LDR              R1, =GPIO_PORTE_DATA_R



ARM Macro Assembler    Page 7 


  208 0000012E 6808            LDR              R0, [R1]    ;Loading input from
                                                             Port E 
  209 00000130 F000 0002       AND              R0, R0, #0x02 ;Bitmasking
  210 00000134 2802            CMP              R0, #2      ; Checking to see i
                                                            f PE1 is pressed 
  211 00000136 D101            BNE              skip100
  212 00000138 F000 F82C       BL               Poll        ; Poll to see if bu
                                                            tton is released, R
                                                            2 returns 0x02 if p
                                                            ushed AND released
  213 0000013C         skip100
  214 0000013C 2A02            CMP              R2, #2
  215 0000013E D003            BEQ              LEDoff
  216 00000140 F04F 0001       MOV              R0, #0x01
  217 00000144 6008            STR              R0, [R1]
  218 00000146 E7E8            B                next100
  219 00000148         
  220 00000148         LEDoff
  221 00000148 493C            LDR              R1, =GPIO_PORTF_DATA_R
  222 0000014A 6808            LDR              R0, [R1]
  223 0000014C 2800            CMP              R0, #0      ;Checking to see if
                                                             PF4 is pressed
  224 0000014E D101            BNE              BeginLEDoff ;If not, continue d
                                                            uty cycles
  225 00000150 F000 F828       BL               Breathe     ;If so, LED breathe
                                                            s     
  226 00000154         BeginLEDoff
  227 00000154 F002 0200       AND              R2, R2, #0
  228 00000158 4939            LDR              R1, =GPIO_PORTE_DATA_R
  229 0000015A 6808            LDR              R0, [R1]    ;Loading input from
                                                             Port E 
  230 0000015C F000 0002       AND              R0, R0, #0x02 ;Bitmasking
  231 00000160 2802            CMP              R0, #2      ; Checking to see i
                                                            f PE1 is pressed 
  232 00000162 D101            BNE              skip0
  233 00000164 F000 F816       BL               Poll        ; Poll to see if bu
                                                            tton is released, R
                                                            2 returns 0x02 if p
                                                            ushed AND released
  234 00000168         skip0
  235 00000168 2A02            CMP              R2, #2
  236 0000016A F43F AF76       BEQ              Default20
  237 0000016E F04F 0000       MOV              R0, #0x00
  238 00000172 6008            STR              R0, [R1]
  239 00000174 E7E8            B                LEDoff
  240 00000176         
  241 00000176         
  242 00000176 E770            B                loop
  243 00000178         
  244 00000178         dutyloop
  245 00000178         
  246 00000178 1E40    LoopOn  SUBS             R0, R0, #1  ; Decrementing Coun
                                                            ter
  247 0000017A D1FD            BNE              LoopOn      ; Counter, only bra
                                                            nches when at 0
  248 0000017C 4930            LDR              R1, =GPIO_PORTE_DATA_R
  249 0000017E 6808            LDR              R0, [R1]    ; Loading data from
                                                             Port E into regist
                                                            er



ARM Macro Assembler    Page 8 


  250 00000180 F040 0001       ORR              R0, #0x01   ; Toggling PE0
  251 00000184 6008            STR              R0, [R1]    ; Toggling PE0
  252 00000186         
  253 00000186 1E5B    LoopOff SUBS             R3, R3, #1  ; Decrementing Coun
                                                            ter
  254 00000188 D1FD            BNE              LoopOff     ; Counter, only bra
                                                            nches when at 0
  255 0000018A 6808            LDR              R0, [R1]    ; Loading data from
                                                             Port E into regist
                                                            er
  256 0000018C F000 0000       AND              R0, #0x00   ; Toggling PE0
  257 00000190 6008            STR              R0, [R1]    ; Toggling PE0
  258 00000192 4770            BX               LR          ; Loop back up
  259 00000194         
  260 00000194         Poll
  261 00000194 680A            LDR              R2, [R1]    ;Loading input from
                                                             Port E 
  262 00000196 F002 0202       AND              R2, R2, #0x02 ;Bitmasking
  263 0000019A EA80 0202       EOR              R2, R0, R2  ; Checking to see i
                                                            f PE1 is released
  264 0000019E 2A02            CMP              R2, #2
  265 000001A0 D1F8            BNE              Poll
  266 000001A2 4770            BX               LR
  267 000001A4         
  268 000001A4         Breathe                              ;The Breathe functi
                                                            on goes through the
                                                             duty cycles withou
                                                            t checking to see 
  269 000001A4 4674            MOV              R4, LR      ;if PE1 is pressed.
                                                             R13 is pushed beca
                                                            use the Breathe sub
                                                            routine calls the
  270 000001A6         
  271 000001A6         Bloop                                ;dutyloop subroutin
                                                            e in order to have 
                                                            a delay, however ne
                                                            w variable, 
  272 000001A6 F24C 3050       LDR              R0, =Brth   ; Brth#On/Off accou
                                                            nts for a faster Hz
                                                             in order to have b
                                                            reathing effect.
  273 000001AA F04F 0300       MOV              R3, #0
  274 000001AE F04F 0132       LDR              R1, =Uno    ;R0 will be when th
                                                            e light is on, R3 w
                                                            ill be for when its
                                                             off
  275 000001B2 F240 3CE7       LDR              R12, =PercentCnt ;R1 is one per
                                                            cent of the constan
                                                            t "Brth". R12 is th
                                                            e counter ((1/Uno)-
                                                            1)
  276 000001B6         
  277 000001B6         Loopception
  278 000001B6 F04F 0132       LDR              R1, =Uno    ;R1 must be reloade
                                                            d for security 
  279 000001BA EBA0 0001       SUB              R0, R0, R1  ;Certain Percentage
                                                             of constant "Brth"
                                                             is deducted
  280 000001BE 440B            ADD              R3, R3, R1  ;Certain Percantage



ARM Macro Assembler    Page 9 


                                                             of constant "Brth"
                                                             is added
  281 000001C0 461D            MOV              R5, R3
  282 000001C2 4606            MOV              R6, R0      ; Registers in the 
                                                            dutyloop subroutine
                                                             modify R3 and R0. 
                                                            Saving in R5, R6.
  283 000001C4 4F1D            LDR              R7, =GPIO_PORTF_DATA_R ;Checkin
                                                            g to see if PF4 is 
                                                            not pressed anymore
                                                            
  284 000001C6 F8D7 8000       LDR              R8, [R7]
  285 000001CA F1B8 0F00       CMP              R8, #0
  286 000001CE D123            BNE              Leave
  287 000001D0 F7FF FFD2       BL               dutyloop
  288 000001D4 4630            MOV              R0, R6      ; Reloading registe
                                                            rs
  289 000001D6 462B            MOV              R3, R5
  290 000001D8 F1BC 0C01       SUBS             R12, R12, #1 ; Once counter rea
                                                            ches zero, program 
                                                            can skip branch
  291 000001DC D1EB            BNE              Loopception
  292 000001DE         
  293 000001DE F24C 3350       LDR              R3, =Brth   ; Same routine as L
                                                            oopception EXCEPT t
                                                            he R3 and R0 is rev
                                                            ersed
  294 000001E2 F04F 0000       MOV              R0, #0      ; This gives the il
                                                            lusion of the LED c
                                                            oming down from its
                                                             brightest peak 
  295 000001E6 F04F 0132       LDR              R1, =Uno    ; and back to its o
                                                            ff state. 
  296 000001EA F240 3CE7       LDR              R12, =PercentCnt
  297 000001EE         Loopception2
  298 000001EE F04F 0132       LDR              R1, =Uno
  299 000001F2 EBA3 0301       SUB              R3, R3, R1
  300 000001F6 4408            ADD              R0, R0, R1
  301 000001F8 4605            MOV              R5, R0
  302 000001FA 461E            MOV              R6, R3
  303 000001FC 4F0F            LDR              R7, =GPIO_PORTF_DATA_R ;Checkin
                                                            g to see if PF4 is 
                                                            not pressed anymore
                                                            
  304 000001FE F8D7 8000       LDR              R8, [R7]
  305 00000202 F1B8 0F00       CMP              R8, #0
  306 00000206 D107            BNE              Leave
  307 00000208 F7FF FFB6       BL               dutyloop
  308 0000020C 4633            MOV              R3, R6
  309 0000020E 4628            MOV              R0, R5
  310 00000210 F1BC 0C01       SUBS             R12, R12, #1
  311 00000214 D1EB            BNE              Loopception2
  312 00000216 E7C6            B                Bloop       ;Bloop serves to no
                                                            t Push R13 every ti
                                                            me
  313 00000218         Leave
  314 00000218 46A6            MOV              LR, R4
  315 0000021A 4770            BX               LR
  316 0000021C         



ARM Macro Assembler    Page 10 


  317 0000021C         
  318 0000021C         
  319 0000021C                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  320 0000021C                 END                          ; end of file
              400FE608 
              40025400 
              40025420 
              40025510 
              4002551C 
              40024400 
              40024420 
              4002451C 
              400253FC 
              400243FC 
              001E8480 
              0007A120 
              0016E360 
              000F4240 
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\main.d
 -o.\main.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\In
c\Luminary --predefine="__EVAL SETA 1" --list=.\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 57 in file main.s
   Uses
      None
Comment: .text unused
Begin100 00000128

Symbol: Begin100
   Definitions
      At line 205 in file main.s
   Uses
      At line 202 in file main.s
Comment: Begin100 used once
Begin20 00000068

Symbol: Begin20
   Definitions
      At line 112 in file main.s
   Uses
      At line 108 in file main.s
Comment: Begin20 used once
Begin40 00000098

Symbol: Begin40
   Definitions
      At line 136 in file main.s
   Uses
      At line 133 in file main.s
Comment: Begin40 used once
Begin60 000000C8

Symbol: Begin60
   Definitions
      At line 159 in file main.s
   Uses
      At line 156 in file main.s
Comment: Begin60 used once
Begin80 000000F8

Symbol: Begin80
   Definitions
      At line 182 in file main.s
   Uses
      At line 179 in file main.s
Comment: Begin80 used once
BeginLEDoff 00000154

Symbol: BeginLEDoff
   Definitions
      At line 226 in file main.s
   Uses
      At line 110 in file main.s
      At line 135 in file main.s
      At line 158 in file main.s
      At line 181 in file main.s
      At line 204 in file main.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 224 in file main.s

Bloop 000001A6

Symbol: Bloop
   Definitions
      At line 271 in file main.s
   Uses
      At line 312 in file main.s
Comment: Bloop used once
Breathe 000001A4

Symbol: Breathe
   Definitions
      At line 268 in file main.s
   Uses
      At line 109 in file main.s
      At line 134 in file main.s
      At line 157 in file main.s
      At line 180 in file main.s
      At line 203 in file main.s
      At line 225 in file main.s

Default20 0000005A

Symbol: Default20
   Definitions
      At line 104 in file main.s
   Uses
      At line 127 in file main.s
      At line 236 in file main.s

LEDoff 00000148

Symbol: LEDoff
   Definitions
      At line 220 in file main.s
   Uses
      At line 215 in file main.s
      At line 239 in file main.s

Leave 00000218

Symbol: Leave
   Definitions
      At line 313 in file main.s
   Uses
      At line 286 in file main.s
      At line 306 in file main.s

LoopOff 00000186

Symbol: LoopOff
   Definitions
      At line 253 in file main.s
   Uses
      At line 254 in file main.s
Comment: LoopOff used once
LoopOn 00000178



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols


Symbol: LoopOn
   Definitions
      At line 246 in file main.s
   Uses
      At line 247 in file main.s
Comment: LoopOn used once
Loopception 000001B6

Symbol: Loopception
   Definitions
      At line 277 in file main.s
   Uses
      At line 291 in file main.s
Comment: Loopception used once
Loopception2 000001EE

Symbol: Loopception2
   Definitions
      At line 297 in file main.s
   Uses
      At line 311 in file main.s
Comment: Loopception2 used once
Poll 00000194

Symbol: Poll
   Definitions
      At line 260 in file main.s
   Uses
      At line 119 in file main.s
      At line 143 in file main.s
      At line 166 in file main.s
      At line 189 in file main.s
      At line 212 in file main.s
      At line 233 in file main.s
      At line 265 in file main.s

Start 00000000

Symbol: Start
   Definitions
      At line 60 in file main.s
   Uses
      At line 59 in file main.s
Comment: Start used once
dutyloop 00000178

Symbol: dutyloop
   Definitions
      At line 244 in file main.s
   Uses
      At line 126 in file main.s
      At line 149 in file main.s
      At line 172 in file main.s
      At line 195 in file main.s
      At line 287 in file main.s
      At line 307 in file main.s

loop 0000005A



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols


Symbol: loop
   Definitions
      At line 102 in file main.s
   Uses
      At line 242 in file main.s
Comment: loop used once
next100 0000011A

Symbol: next100
   Definitions
      At line 198 in file main.s
   Uses
      At line 194 in file main.s
      At line 218 in file main.s

next40 0000008A

Symbol: next40
   Definitions
      At line 129 in file main.s
   Uses
      At line 125 in file main.s
      At line 150 in file main.s

next60 000000BA

Symbol: next60
   Definitions
      At line 152 in file main.s
   Uses
      At line 148 in file main.s
      At line 173 in file main.s

next80 000000EA

Symbol: next80
   Definitions
      At line 175 in file main.s
   Uses
      At line 171 in file main.s
      At line 196 in file main.s

skip0 00000168

Symbol: skip0
   Definitions
      At line 234 in file main.s
   Uses
      At line 232 in file main.s
Comment: skip0 used once
skip100 0000013C

Symbol: skip100
   Definitions
      At line 213 in file main.s
   Uses
      At line 211 in file main.s
Comment: skip100 used once



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols

skip20 0000007C

Symbol: skip20
   Definitions
      At line 121 in file main.s
   Uses
      At line 118 in file main.s
Comment: skip20 used once
skip40 000000AC

Symbol: skip40
   Definitions
      At line 144 in file main.s
   Uses
      At line 142 in file main.s
Comment: skip40 used once
skip60 000000DC

Symbol: skip60
   Definitions
      At line 167 in file main.s
   Uses
      At line 165 in file main.s
Comment: skip60 used once
skip80 0000010C

Symbol: skip80
   Definitions
      At line 190 in file main.s
   Uses
      At line 188 in file main.s
Comment: skip80 used once
30 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

Brth 0000C350

Symbol: Brth
   Definitions
      At line 51 in file main.s
   Uses
      At line 272 in file main.s
      At line 293 in file main.s

EightyOff 001E8480

Symbol: EightyOff
   Definitions
      At line 49 in file main.s
   Uses
      At line 192 in file main.s
Comment: EightyOff used once
EightyOn 0007A120

Symbol: EightyOn
   Definitions
      At line 48 in file main.s
   Uses
      At line 191 in file main.s
Comment: EightyOn used once
FortyOff 000F4240

Symbol: FortyOff
   Definitions
      At line 45 in file main.s
   Uses
      At line 146 in file main.s
Comment: FortyOff used once
FortyOn 0016E360

Symbol: FortyOn
   Definitions
      At line 44 in file main.s
   Uses
      At line 145 in file main.s
Comment: FortyOn used once
GPIO_PORTE_AFSEL_R 40024420

Symbol: GPIO_PORTE_AFSEL_R
   Definitions
      At line 33 in file main.s
   Uses
      At line 95 in file main.s
Comment: GPIO_PORTE_AFSEL_R used once
GPIO_PORTE_DATA_R 400243FC

Symbol: GPIO_PORTE_DATA_R
   Definitions
      At line 31 in file main.s
   Uses
      At line 114 in file main.s
      At line 138 in file main.s
      At line 161 in file main.s
      At line 184 in file main.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

      At line 207 in file main.s
      At line 228 in file main.s
      At line 248 in file main.s

GPIO_PORTE_DEN_R 4002451C

Symbol: GPIO_PORTE_DEN_R
   Definitions
      At line 34 in file main.s
   Uses
      At line 98 in file main.s
Comment: GPIO_PORTE_DEN_R used once
GPIO_PORTE_DIR_R 40024400

Symbol: GPIO_PORTE_DIR_R
   Definitions
      At line 32 in file main.s
   Uses
      At line 92 in file main.s
Comment: GPIO_PORTE_DIR_R used once
GPIO_PORTF_AFSEL_R 40025420

Symbol: GPIO_PORTF_AFSEL_R
   Definitions
      At line 38 in file main.s
   Uses
      At line 75 in file main.s
Comment: GPIO_PORTF_AFSEL_R used once
GPIO_PORTF_DATA_R 400253FC

Symbol: GPIO_PORTF_DATA_R
   Definitions
      At line 36 in file main.s
   Uses
      At line 105 in file main.s
      At line 130 in file main.s
      At line 153 in file main.s
      At line 176 in file main.s
      At line 199 in file main.s
      At line 221 in file main.s
      At line 283 in file main.s
      At line 303 in file main.s

GPIO_PORTF_DEN_R 4002551C

Symbol: GPIO_PORTF_DEN_R
   Definitions
      At line 40 in file main.s
   Uses
      At line 81 in file main.s
Comment: GPIO_PORTF_DEN_R used once
GPIO_PORTF_DIR_R 40025400

Symbol: GPIO_PORTF_DIR_R
   Definitions
      At line 37 in file main.s
   Uses
      At line 72 in file main.s
Comment: GPIO_PORTF_DIR_R used once



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTF_PUR_R 40025510

Symbol: GPIO_PORTF_PUR_R
   Definitions
      At line 39 in file main.s
   Uses
      At line 78 in file main.s
Comment: GPIO_PORTF_PUR_R used once
PercentCnt 000003E7

Symbol: PercentCnt
   Definitions
      At line 53 in file main.s
   Uses
      At line 275 in file main.s
      At line 296 in file main.s

SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 54 in file main.s
   Uses
      At line 66 in file main.s
      At line 86 in file main.s

SixtyOff 0016E360

Symbol: SixtyOff
   Definitions
      At line 47 in file main.s
   Uses
      At line 169 in file main.s
Comment: SixtyOff used once
SixtyOn 000F4240

Symbol: SixtyOn
   Definitions
      At line 46 in file main.s
   Uses
      At line 168 in file main.s
Comment: SixtyOn used once
TwentyOff 0007A120

Symbol: TwentyOff
   Definitions
      At line 43 in file main.s
   Uses
      At line 123 in file main.s
Comment: TwentyOff used once
TwentyOn 001E8480

Symbol: TwentyOn
   Definitions
      At line 42 in file main.s
   Uses
      At line 122 in file main.s
Comment: TwentyOn used once
Uno 00000032



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols


Symbol: Uno
   Definitions
      At line 52 in file main.s
   Uses
      At line 274 in file main.s
      At line 278 in file main.s
      At line 295 in file main.s
      At line 298 in file main.s

21 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

TExaS_Init 00000000

Symbol: TExaS_Init
   Definitions
      At line 56 in file main.s
   Uses
      At line 62 in file main.s
Comment: TExaS_Init used once
1 symbol
385 symbols in table
